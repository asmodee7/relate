security:
    encoders:
        App\Entity\Teacher:
            algorithm: bcrypt

        App\Entity\School:
            algorithm: bcrypt

        App\Entity\Student:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }

        chain_provider:
            chain:
                providers:
                    [
                        app_school_provider,
                        app_teacher_provider,
                        app_student_provider,
                    ]

        app_school_provider:
            entity:
                class: App\Entity\School
                property: username
        app_teacher_provider:
            entity:
                class: App\Entity\Teacher
                property: username
        app_student_provider:
            entity:
                class: App\Entity\Student
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: chain_provider
            # provider: users_in_memory
            form_login:
                login_path: login
                check_path: login

                default_target_path: homepage

            logout:
                path: logout
                target: login

                # role_hierarchy:
                #     ROLE_ADMIN: ROLE_USER

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/school, roles: ROLE_SCHOOL }
         - { path: ^/teacher, roles: ROLE_TEACHER }
         - { path: ^/student, roles: ROLE_STUDENT }
    #     # - { path: ^/profile, roles: ROLE_USER }
    # access_denied_url: login
